# Note - parts of this file are under:
# Copyright (c) Jupyter Development Team.
# Distributed under the terms of the Modified BSD License.

# Options:
# - AlmaLinux (default; e.g., quay.io/almalinux/almalinux:8.6)
# - UBI (ensure active subscriptions at host; e.g., registry.access.redhat.com/ubi8/ubi:8.6)
# - CentOS (e.g., quay.io/centos/centos:stream8)
ARG ROOT_CONTAINER=quay.io/almalinux/almalinux:8.6
FROM $ROOT_CONTAINER
LABEL maintainer="Sebastian Lehrig <sebastian.lehrig1@ibm.com>"

ARG ELYRA_VERSION=3.10.1
# highest kubeflow-supported release
ARG KUBECTL_VERSION=v1.21.11
ARG NB_USER="jovyan"
ARG NB_UID="1000"
ARG NB_GID="100"
ARG ONNX_VERSION=1.11.0
# Pin python version here, or set it to "default"
ARG PYTHON_VERSION=3.8
ARG SUPPORT_GPU=true
# Arch is automatically provided by buildx
# See: https://docs.docker.com/engine/reference/builder/#automatic-platform-args-in-the-global-scope
ARG TARGETARCH
ARG TENSORFLOW_VERSION=2.8.0

ENV CONDA_DIR=/opt/conda \
    SHELL=/bin/bash \
    NB_USER="${NB_USER}" \
    NB_UID=${NB_UID} \
    NB_GID=${NB_GID} \
    # Import matplotlib the first time to build the font cache.
    XDG_CACHE_HOME="/home/${NB_USER}/.cache/"
ENV PATH="${CONDA_DIR}/bin:${PATH}" \
    HOME="/home/${NB_USER}"

# Fix: https://github.com/hadolint/hadolint/wiki/DL4006
# Fix: https://github.com/koalaman/shellcheck/wiki/SC3014
SHELL ["/bin/bash", "-o", "pipefail", "-c"]

USER root

# Copy a script that we will use to correct permissions after running certain commands
COPY fix-permissions /usr/local/bin/fix-permissions
# Packages to install
COPY dnf_requirements.txt dnf_requirements.txt
# All root-related
RUN chmod a+rx /usr/local/bin/fix-permissions && \
    # dnf
    # See: https://rpmfusion.org/Configuration
    dnf -y install \
        dnf-plugins-core \
        https://dl.fedoraproject.org/pub/epel/epel-release-latest-$(rpm -E %rhel).noarch.rpm \
        https://mirrors.rpmfusion.org/free/el/rpmfusion-free-release-$(rpm -E %rhel).noarch.rpm \
        https://mirrors.rpmfusion.org/nonfree/el/rpmfusion-nonfree-release-$(rpm -E %rhel).noarch.rpm \
    && \
    # Fix for librose, which needs libffi.so.7
    if [ "${TARGETARCH}" = "ppc64le" ]; then \
        dnf -y install https://rpmfind.net/linux/opensuse/distribution/leap/15.3/repo/oss/ppc64le/libffi7-3.2.1.git259-10.8.ppc64le.rpm ; \
    fi && \
    dnf config-manager --set-enabled powertools && \
    dnf makecache --refresh && \
    dnf -y upgrade && \
    dnf -y groupinstall "Development Tools" && \
    dnf -y install $(cat dnf_requirements.txt) && \
    dnf clean all && rm -rf /var/cache/dnf/* && rm -rf /var/cache/yum  && \
    rm -f dnf_requirements.txt && \
    # kubectl
    curl -LO https://storage.googleapis.com/kubernetes-release/release/${KUBECTL_VERSION}/bin/linux/${TARGETARCH}/kubectl && \
    chmod +x ./kubectl && \
    mv ./kubectl /usr/local/bin/kubectl && \
    # Allow OpenSSH to talk to containers without asking for confirmation
    # by disabling StrictHostKeyChecking.
    # mpi-operator mounts the .ssh folder from a Secret. For that to work, we need
    # to disable UserKnownHostsFile to avoid write permissions.
    # Disabling StrictModes avoids directory and files read permission checks.
    mkdir -p /var/run/sshd && \
    sed -i 's/[ #]\(.*StrictHostKeyChecking \).*/ \1no/g' /etc/ssh/ssh_config && \
    echo "    UserKnownHostsFile /dev/null" >> /etc/ssh/ssh_config && \
    sed -i 's/#\(StrictModes \).*/\1no/g' /etc/ssh/sshd_config && \
    # nano-tiny
    update-alternatives --install /usr/bin/nano nano /bin/nano-tiny 10 && \
    # Enable prompt color in the skeleton .bashrc before creating the default NB_USER
    # hadolint ignore=SC2016
    sed -i 's/^#force_color_prompt=yes/force_color_prompt=yes/' /etc/skel/.bashrc && \
    # Add call to conda init script see https://stackoverflow.com/a/58081608/4413446
    echo 'eval "$(command conda shell.bash hook 2> /dev/null)"' >> /etc/skel/.bashrc && \
    # Create NB_USER with name jovyan user with UID=1000 and in the 'users' group
    # and make sure these dirs are writable by the `users` group.
    echo "auth requisite pam_deny.so" >> /etc/pam.d/su && \
    sed -i.bak -e 's/^%admin/#%admin/' /etc/sudoers && \
    sed -i.bak -e 's/^%sudo/#%sudo/' /etc/sudoers && \
    groupadd -f --gid 1337 $NB_USER && \
    useradd -l -m -s /bin/bash -N -u "${NB_UID}" "${NB_USER}" && \
    mkdir -p "${CONDA_DIR}" && \
    chown "${NB_USER}:${NB_GID}" "${CONDA_DIR}" && \
    chmod g+w /etc/passwd && \
    # Cleanup
    fix-permissions "${HOME}" && \
    fix-permissions "${CONDA_DIR}"

ENV LC_ALL=en_US.utf8 \
    LANG=en_US.utf8 \
    LANGUAGE=en_US.utf8

USER ${NB_UID}

COPY --chown="${NB_UID}:${NB_GID}" initial-condarc "${CONDA_DIR}/.condarc"

WORKDIR /tmp


